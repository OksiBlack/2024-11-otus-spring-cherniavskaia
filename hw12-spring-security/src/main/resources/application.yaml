server:
  port: 9090

keycloak:
  server:
    base-url: "${KEYCLOAK_BASE_URL:http://localhost:58080}"

spring:
  datasource:
    schema: bookstore
    #    url: jdbc:h2:mem:maindb;MODE=MSSQLServer;INIT=CREATE SCHEMA IF NOT EXISTS BOOKSTORE;
#    url: jdbc:h2:file:./_data/jpa-demo;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS BOOKSTORE;
    url: jdbc:postgresql://localhost:5477/bookstore;
    hikari:
      schema: bookstore
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        generate_statistics: false
  liquibase:
    change-log: db/changelog/db.changelog-master.yaml
    liquibase-schema: "public"
    default-schema: "bookstore"
  docker:
    compose:
      lifecycle-management: start_only
      file: "docker-compose.yaml"
  shell:
    interactive:
      enabled: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: "${keycloak.server.base-url}/realms/bookstore"
          jwk-set-uri: "${keycloak.server.base-url}/realms/bookstore/protocol/openid-connect/certs"


  mvc:
    log-request-details: true
    log-resolved-exception: true
    problemdetails:
      enabled: true

logging:
  level:
    root: "debug"
    org.hibernate: "debug"
    liquibase: "debug"

springdoc:

  show-oauth2-endpoints: true
  show-actuator: true
  show-login-endpoint: true
  swagger-ui:
    disable-swagger-default-url: true
    try-it-out-enabled: true
    oauth2-redirect-url: "${keycloak.server.base-url}/login/oauth2/code/keycloak"


